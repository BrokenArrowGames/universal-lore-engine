# https://github.com/pnpm/action-setup
name: CI - Build

on:
  workflow_dispatch:
    inputs:
      git-branch:
        required: false
      node-version:
        required: true
        default: '20'
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  GIT_BRANCH: ${{ inputs.git-branch || github.ref }}
  PNPM_VERSION: ${{ inputs.pnpm-version || '8' }}
  NODE_VERSION: ${{ inputs.node-version || '20' }}
  APP_ENV: LOCAL
  DB_APP_HOST: "127.0.0.1"
  DB_APP_PORT: 5432
  DB_APP_USERNAME: postgres
  DB_APP_PASSWORD: mysecretpassword
  DB_APP_DATABASE: postgres
  DB_APP_SCHEMA: app
  AUTH_SESSION_SECRET: mysecretpassword
  ROOT_USER_NAME: sys_admin
  ROOT_USER_PASS: mysecretpassword
  ROOT_USER_MAIL: admin@example.com
  TEST_USER_NAME: sys_user
  TEST_USER_PASS: mysecretpassword
  TEST_USER_MAIL: user@example.com
  AWS_ACCESS_KEY_ID: dummy_key_id
  AWS_SECRET_ACCESS_KEY: dummy_key

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
        with:
          branch: ${{ env.GIT_BRANCH }}
          nodeVersion: ${{ env.NODE_VERSION }}
      - name: Build
        run: pnpm build
      - name: Unit Tests
        run: pnpm test
  smoke-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
        with:
          branch: ${{ env.GIT_BRANCH }}
          nodeVersion: ${{ env.NODE_VERSION }}
      - name: Code Generation
        run: pnpm prebuild
      - name: Integration Tests
        run: pnpm test:int

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ env.DB_APP_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
